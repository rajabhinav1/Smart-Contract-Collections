Voting Dapp
Introduction to the process of building a voting DAPP using Truffle, React, Solidity
Dapp(Decentralised Application)

Preparation
Install the ethereum wallet and create an account metamask

Switch to the Ropsten test network and receive free test coins via the tap

Get

Document description
client/ : React App files for Frontend

client/public/ : contain static web files

client/src/：react source files for react app

contract/： store original codes of the smart contract.

migrations/：instructions for deploying the smart contract(s) in the “contracts” folder.

test/ : tests for your smart contracts

truffle-config.js : configuration file.

Modifications
Modify the configuration file in the truffle-config.js file so that it uses your own account for contract deployment.

Find the private key for your address in metamask

Also ensure that the address has a certain amount of eth test coins.

findsKey

Fill in the key for your address in line 3 of truffle-config.js.

When you are done ctrl+s save it

Running
Open command line, and select npm-truffle

Upgrading npm and installing smart contract dependencies

npm install -g npm
npm install
Contract Compilation

truffle compile
Test contracts

truffle test
Contract deployment (wait patiently)

truffle migrate --network ropsten 
Go to the front-end folder

cd client
Installing dependencies

npm install
Development of dapps

npm run start
Wait for the command line to appear Compiled successfully!

Click on the left side of the screen >>>>Port >>>> Add Port

Select Image>>>>npm-truffle

Port>>3000>>Add

Open link address

Perfect!